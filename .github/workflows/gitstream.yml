name: gitStream and ESLint Checks

permissions:
  contents: read
  pull-requests: write
  statuses: write
  checks: write

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
  workflow_dispatch:

jobs:
  gitStream:
    runs-on: ubuntu-latest
    name: GitStream workflow automation
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full repository history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Evaluate GitStream Rules
        id: rules-engine
        uses: linear-b/gitstream-github-action@v2
        with:
          full_repository: ${{ github.repository }}
          head_ref: ${{ github.head_ref }}
          base_ref: ${{ github.base_ref }}
          resolver_url: ${{ secrets.RESOLVER_URL }}
          resolver_token: ${{ secrets.RESOLVER_TOKEN }}

      - name: Debug GitStream output
        if: always()
        run: |
          echo "GitStream status: ${{ steps.rules-engine.outcome }}"
          echo "GitStream output: ${{ steps.rules-engine.outputs.result }}"

  lint:
    runs-on: ubuntu-latest
    name: ESLint Check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        id: eslint
        run: |
          npx eslint . --format=stylish
        continue-on-error: false

      - name: Report ESLint status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const status = '${{ steps.eslint.outcome }}' === 'failure' ? 'failure' : 'success';
            const description = status === 'failure' ? 'ESLint found issues' : 'ESLint check passed';
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: status,
              context: 'ESLint Check',
              description: description
            });

            if (status === 'failure') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: 'ESLint check failed. Please review the workflow logs for details.'
              });
            }
