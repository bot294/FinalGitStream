name: gitStream and ESLint Checks
permissions:
  contents: read
  statuses: write

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      client_payload:
        description: 'The Client payload'
        required: true
      full_repository:
        description: 'The repository name including the owner in owner/repo_name format'
        required: true
      head_ref:
        description: 'The head sha'
        required: true
      base_ref:
        description: 'The base ref'
        required: true
      installation_id:
        description: 'The installation id'
        required: false
      resolver_url:
        description: 'The resolver url to pass results to'
        required: true
      resolver_token:
        description: 'Optional resolver token for resolver service'
        required: false
        default: ""

jobs:
  combined-check:
    runs-on: ubuntu-latest
    name: Combined GitStream and ESLint Checks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full repository history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Run GitStream and ESLint Checks
        run: |
          echo "Checking required inputs..."
          REPO="${{ github.event.inputs.full_repository }}"
          HEAD_REF="${{ github.event.inputs.head_ref }}"
          BASE_REF="${{ github.event.inputs.base_ref }}"
          
          if [ -z "$REPO" ] || [ -z "$HEAD_REF" ] || [ -z "$BASE_REF" ]; then
            echo "Missing required inputs!"
            exit 1
          fi

          echo "Installing dependencies..."
          npm ci

          echo "Evaluating GitStream Rules..."
          OUTPUT=$(npx linear-b/gitstream-github-action@v2 \
            --full-repository $REPO \
            --head-ref $HEAD_REF \
            --base-ref $BASE_REF \
            --client-payload '${{ github.event.inputs.client_payload || '{}' }}' \
            --installation-id '${{ github.event.inputs.installation_id }}' \
            --resolver-url '${{ github.event.inputs.resolver_url }}' \
            --resolver-token '${{ github.event.inputs.resolver_token || secrets.RESOLVER_TOKEN }}' \
            --rules path/to/your/gitstream.cm)  # Specify the path to your gitstream.cm rules file

          echo "GitStream Output: $OUTPUT"

          echo "Running ESLint..."
          npx eslint . || true

          # Reporting statuses
          echo "Reporting statuses..."
          github_token="${{ secrets.GITHUB_TOKEN }}"
          curl -X POST -H "Authorization: token $github_token" \
            -d '{
              "state": "'"${{ job.status }}"'",
              "context": "Combined GitStream and ESLint Checks",
              "description": "Combined job completed with status: '"${{ job.status }}"'"
            }' \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}"

          echo "Finished checks."
