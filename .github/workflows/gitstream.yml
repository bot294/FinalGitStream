name: gitStream and ESLint Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      # ... (keep existing inputs)

jobs:
  gitStream:
    runs-on: ubuntu-latest
    name: gitStream workflow automation
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full repository history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Install dependencies
        run: npm ci

      - name: Debug Environment
        run: |
          echo "GitHub Event Name: ${{ github.event_name }}"
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Head Ref: ${{ github.head_ref }}"
          echo "GitHub Base Ref: ${{ github.base_ref }}"
          echo "Pull Request Number: ${{ github.event.pull_request.number }}"
          echo "Repository: ${{ github.repository }}"

      - name: Verify .cm file
        run: |
          if [ ! -f ".cm/gitstream.cm" ]; then
            echo "gitstream.cm file is missing. This is required for gitStream to run."
            exit 1
          else
            echo "Contents of .cm/gitstream.cm:"
            cat .cm/gitstream.cm
          fi

      - name: Evaluate GitStream Rules
        id: rules-engine
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_STEP_DEBUG: true
        uses: linear-b/gitstream-github-action@v2
        with:
          config_repo: ${{ github.repository }}
          config_ref: ${{ github.head_ref || github.ref_name }}
          pr_number: ${{ github.event.pull_request.number }}

      - name: Debug gitStream output
        if: always()
        run: |
          echo "GitStream status: ${{ steps.rules-engine.outcome }}"
          echo "GitStream output: ${{ steps.rules-engine.outputs.result }}"
          echo "Assigned reviewers: ${{ toJson(github.event.pull_request.requested_reviewers) }}"

      - name: Report gitStream status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const status = '${{ steps.rules-engine.outcome }}' === 'failure' ? 'failure' : 'success';
            const description = status === 'failure' 
              ? 'GitStream encountered errors'
              : 'GitStream job completed successfully';
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: status,
              context: 'GitStream Check',
              description: description
            });
            
            if (status === 'failure') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: 'GitStream encountered errors. Please review the workflow logs for details.'
              });
            }

  # ... (keep the lint job as is)
