name: gitStream and ESLint Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      full_repository:
        description: 'The repository name including the owner in owner/repo_name format'
        required: true
      head_ref:
        description: 'The head sha'
        required: true
      base_ref:
        description: 'The base ref'
        required: true
      client_payload:
        description: 'The Client payload'
        required: true
      installation_id:
        description: 'The installation id'
        required: false
      resolver_url:
        description: 'The resolver url to pass results to'
        required: true
      resolver_token:
        description: 'Optional resolver token for resolver service'
        required: false
        default: ""

jobs:
  gitStream:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    name: gitStream workflow automation
    steps:
      - name: Evaluate Rules
        uses: linear-b/gitstream-github-action@v2
        id: rules-engine
        with:
          full_repository: ${{ github.event.inputs.full_repository }}
          head_ref: ${{ github.event.inputs.head_ref }}
          base_ref: ${{ github.event.inputs.base_ref }}
          client_payload: ${{ github.event.inputs.client_payload }}
          installation_id: ${{ github.event.inputs.installation_id }}
          resolver_url: ${{ github.event.inputs.resolver_url }}
          resolver_token: ${{ github.event.inputs.resolver_token }}

  eslint:
    runs-on: ubuntu-latest
    name: ESLint Check
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.15.1'
      - run: npm ci
      - name: Run ESLint
        run: npx eslint . --config eslint.config.js --format json --output-file eslint-results.json
      - name: Check ESLint results
        id: check-eslint
        run: |
          ERROR_COUNT=$(jq '.length' eslint-results.json)
          if [ $ERROR_COUNT -gt 0 ]; then
            echo "ESLint found $ERROR_COUNT errors or warnings"
            echo "eslint_failed=true" >> $GITHUB_OUTPUT
          else
            echo "ESLint passed with no errors or warnings"
            echo "eslint_failed=false" >> $GITHUB_OUTPUT
      - name: Annotate ESLint results
        uses: ataylorme/eslint-annotate-action@v2-alpha
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint-results.json"
      - name: Report ESLint status
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const eslint_failed = '${{ steps.check-eslint.outputs.eslint_failed }}' === 'true';
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: eslint_failed ? 'failure' : 'success',
              context: 'ESLint Check',
              description: eslint_failed ? 'ESLint found errors or warnings' : 'ESLint passed'
            });
            if (eslint_failed) {
              core.setFailed('ESLint check failed');
            }
